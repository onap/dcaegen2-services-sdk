{
  "comments": [
    {
      "key": {
        "uuid": "265371fa_ca9ae835",
        "filename": "rest-services/dmaap-client/src/test/java/org/onap/dcaegen2/services/sdk/rest/services/dmaap/client/MessageRouterTestsUtils.java",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-06-18T11:55:22Z",
      "side": 1,
      "message": "Why not `Flux.fromIterable(getAsJsonObjects(messages))` or something similar?",
      "range": {
        "startLine": 101,
        "startChar": 15,
        "endLine": 101,
        "endChar": 70
      },
      "revId": "04b4ff36bc58bbcb27e59a1a8712d15cc16ca4da",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a56f53a7_d237fa7f",
        "filename": "rest-services/dmaap-client/src/test/java/org/onap/dcaegen2/services/sdk/rest/services/dmaap/client/MessageRouterTestsUtils.java",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 3789
      },
      "writtenOn": "2019-06-18T12:32:58Z",
      "side": 1,
      "message": "Right, I added `jsonBatch` and `plainBatch` functions long before `getAsJsonObjects`  and have forgotten to refactor that class ;)",
      "parentUuid": "265371fa_ca9ae835",
      "range": {
        "startLine": 101,
        "startChar": 15,
        "endLine": 101,
        "endChar": 70
      },
      "revId": "04b4ff36bc58bbcb27e59a1a8712d15cc16ca4da",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "059bd66e_def57b6d",
        "filename": "rest-services/dmaap-client/src/test/java/org/onap/dcaegen2/services/sdk/rest/services/dmaap/client/MessageRouterTestsUtils.java",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 3789
      },
      "writtenOn": "2019-06-18T13:16:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a56f53a7_d237fa7f",
      "range": {
        "startLine": 101,
        "startChar": 15,
        "endLine": 101,
        "endChar": 70
      },
      "revId": "04b4ff36bc58bbcb27e59a1a8712d15cc16ca4da",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "daa2e90e_a4eaefeb",
        "filename": "rest-services/dmaap-client/src/test/java/org/onap/dcaegen2/services/sdk/rest/services/dmaap/client/api/MessageRouterPublisherIT.java",
        "patchSetId": 2
      },
      "lineNbr": 218,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-06-18T11:55:22Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 218,
        "startChar": 44,
        "endLine": 218,
        "endChar": 50
      },
      "revId": "04b4ff36bc58bbcb27e59a1a8712d15cc16ca4da",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8664ae7b_407f0c7a",
        "filename": "rest-services/dmaap-client/src/test/java/org/onap/dcaegen2/services/sdk/rest/services/dmaap/client/api/MessageRouterPublisherIT.java",
        "patchSetId": 2
      },
      "lineNbr": 218,
      "author": {
        "id": 3789
      },
      "writtenOn": "2019-06-18T13:16:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "daa2e90e_a4eaefeb",
      "range": {
        "startLine": 218,
        "startChar": 44,
        "endLine": 218,
        "endChar": 50
      },
      "revId": "04b4ff36bc58bbcb27e59a1a8712d15cc16ca4da",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "872bb2d4_68da8b80",
        "filename": "rest-services/dmaap-client/src/test/java/org/onap/dcaegen2/services/sdk/rest/services/dmaap/client/impl/MessageRouterPublisherImplTest.java",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-06-18T11:55:22Z",
      "side": 1,
      "message": "Well, what is \u0027low number of elements\u0027 ? Is 10 low? Maybe 1000 is still low?\nIn testcase above we don\u0027t have this low part, so I assume that we are sending \"high number\" there, right?\n\nMaybe we could name these testcases like \"onPut_givenJsonMessages_whenTheirAmountIsBelowMaxBatchSize_shouldSendSingleHttpRequest\".\n\nThen in tests you could do: \n```\nfinal List\u003cString\u003e jsonMessages \u003d JSON_MESSAGES.subList(0, MAX_BATCH_SIZE - 1);\n```\n,where JSON_MESSAGES is extraction of this `getAsMRJsonMessages(List.of(\"I\", \"like\", \"cookies\"));` call that is all over tests\nand MAX_BATCH_SIZE is this magic `3` in *cut* constructor.\n\nFor me, this would make the tests less ambiguous and more readable, what do you think?",
      "range": {
        "startLine": 93,
        "startChar": 9,
        "endLine": 93,
        "endChar": 31
      },
      "revId": "04b4ff36bc58bbcb27e59a1a8712d15cc16ca4da",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb72ad97_6454828c",
        "filename": "rest-services/dmaap-client/src/test/java/org/onap/dcaegen2/services/sdk/rest/services/dmaap/client/impl/MessageRouterPublisherImplTest.java",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 3789
      },
      "writtenOn": "2019-06-18T12:26:39Z",
      "side": 1,
      "message": "You\u0027re right, it would be more readable. \nSingle http request is being send when messages.size() \u003c\u003d maxBatchSize, so I should name that function  \n\"onPut_givenJsonMessages_whenTheirAmountIsNotAboveMaxBatchSize_shouldSendSingleHttpRequest\" or something similar ;).\n\nJust to be clear, you suggest extracting that list of messages from test functions? \nIn previous commits those messages where defined as `psf`, but Jaszczur suggested defining it in every single test function to increase readability.",
      "parentUuid": "872bb2d4_68da8b80",
      "range": {
        "startLine": 93,
        "startChar": 9,
        "endLine": 93,
        "endChar": 31
      },
      "revId": "04b4ff36bc58bbcb27e59a1a8712d15cc16ca4da",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0388521_91a0c0c4",
        "filename": "rest-services/dmaap-client/src/test/java/org/onap/dcaegen2/services/sdk/rest/services/dmaap/client/impl/MessageRouterPublisherImplTest.java",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-06-18T12:34:26Z",
      "side": 1,
      "message": "I guess it\u0027s matter of preference. \n\nMy reasoning in keeping it as \"psf\" it that for this particular testcase we do not care about content of messages and only about their amount, \nso it\u0027s more readable to keep the implementation detail (exact string) hidden and provide some arbitrary getter (e.g. `messagesListOfSize(X)`).\n\nYou can keep it as is, up to you :)\n\nP.S. name it \"..._whenTheirAmountIs BELOW MaxMatchSize...\", or similar :)",
      "parentUuid": "fb72ad97_6454828c",
      "range": {
        "startLine": 93,
        "startChar": 9,
        "endLine": 93,
        "endChar": 31
      },
      "revId": "04b4ff36bc58bbcb27e59a1a8712d15cc16ca4da",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da4c6d54_4a72f29d",
        "filename": "rest-services/dmaap-client/src/test/java/org/onap/dcaegen2/services/sdk/rest/services/dmaap/client/impl/MessageRouterPublisherImplTest.java",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 3789
      },
      "writtenOn": "2019-06-18T12:36:51Z",
      "side": 1,
      "message": "BELOW means `\u003c\u003d `? :D",
      "parentUuid": "d0388521_91a0c0c4",
      "range": {
        "startLine": 93,
        "startChar": 9,
        "endLine": 93,
        "endChar": 31
      },
      "revId": "04b4ff36bc58bbcb27e59a1a8712d15cc16ca4da",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13692dab_82c74c3c",
        "filename": "rest-services/dmaap-client/src/test/java/org/onap/dcaegen2/services/sdk/rest/services/dmaap/client/impl/MessageRouterPublisherImplTest.java",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-06-18T12:40:31Z",
      "side": 1,
      "message": "Oh true, it should be NotAbove :) Nvm then",
      "parentUuid": "da4c6d54_4a72f29d",
      "range": {
        "startLine": 93,
        "startChar": 9,
        "endLine": 93,
        "endChar": 31
      },
      "revId": "04b4ff36bc58bbcb27e59a1a8712d15cc16ca4da",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92e3db6e_f6e0f11f",
        "filename": "rest-services/dmaap-client/src/test/java/org/onap/dcaegen2/services/sdk/rest/services/dmaap/client/impl/MessageRouterPublisherImplTest.java",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 3789
      },
      "writtenOn": "2019-06-18T13:16:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "13692dab_82c74c3c",
      "range": {
        "startLine": 93,
        "startChar": 9,
        "endLine": 93,
        "endChar": 31
      },
      "revId": "04b4ff36bc58bbcb27e59a1a8712d15cc16ca4da",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec7a1f3b_b21021fd",
        "filename": "rest-services/dmaap-client/src/test/java/org/onap/dcaegen2/services/sdk/rest/services/dmaap/client/impl/MessageRouterPublisherImplTest.java",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-06-18T11:55:22Z",
      "side": 1,
      "message": "```\nfor( i in 0..elements.length) {\n   assertThat(elements[i]).describedAs(\"Http request element at position $i\").isEqualTo(jsonMessages[i]);\n}\n```\nThen you can extract this to `fun assertListsContainSameElements(expected, actual)` and reuse later",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 114,
        "endChar": 83
      },
      "revId": "04b4ff36bc58bbcb27e59a1a8712d15cc16ca4da",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95dee22c_abd87748",
        "filename": "rest-services/dmaap-client/src/test/java/org/onap/dcaegen2/services/sdk/rest/services/dmaap/client/impl/MessageRouterPublisherImplTest.java",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 3789
      },
      "writtenOn": "2019-06-18T13:16:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ec7a1f3b_b21021fd",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 114,
        "endChar": 83
      },
      "revId": "04b4ff36bc58bbcb27e59a1a8712d15cc16ca4da",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}