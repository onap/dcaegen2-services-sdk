{
  "comments": [
    {
      "key": {
        "uuid": "bfd28776_7cd1ea19",
        "filename": "rest-services/dmaap-client/src/main/java/org/onap/dcaegen2/services/sdk/rest/services/dmaap/client/impl/MessageRouterPublisherImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 83,
      "author": {
        "id": 2837
      },
      "writtenOn": "2019-06-19T14:22:02Z",
      "side": 1,
      "message": "Rewrite it to following signature:\n```\nprivate @NotNull RequestBody createBody(List\u003c? extends JsonElement\u003e subItems, ContentType contentType)\n```",
      "revId": "68f52ec3fd4641d8c5094cde285922e077fadecb",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42476e2b_b3ec69e5",
        "filename": "rest-services/dmaap-client/src/main/java/org/onap/dcaegen2/services/sdk/rest/services/dmaap/client/impl/MessageRouterPublisherImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 84,
      "author": {
        "id": 2683
      },
      "writtenOn": "2019-06-24T06:20:24Z",
      "side": 1,
      "message": "For now it makes sense to have simple if-else here. But in the future someone may add a new enum value and this logic might be wrong. Maybe write it with if-elseif-else where else throws a RuntimeException (ie. IllegalArgumentException(\"Unsupported content type: \" + req.contentType())).",
      "revId": "68f52ec3fd4641d8c5094cde285922e077fadecb",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aea39737_c41d18f4",
        "filename": "rest-services/dmaap-client/src/test/java/org/onap/dcaegen2/services/sdk/rest/services/dmaap/client/MessageRouterTestsUtils.java",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 2837
      },
      "writtenOn": "2019-06-19T14:22:02Z",
      "side": 1,
      "message": "It does what it says?\nMaybe it could be createPublishRequestWithJsonContent?",
      "revId": "68f52ec3fd4641d8c5094cde285922e077fadecb",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6775e50b_c84ea7b1",
        "filename": "rest-services/dmaap-client/src/test/java/org/onap/dcaegen2/services/sdk/rest/services/dmaap/client/MessageRouterTestsUtils.java",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 3789
      },
      "writtenOn": "2019-06-21T05:10:47Z",
      "side": 1,
      "message": "`Application/json` is a default value for MR Publisher and that function could look like:\n\n`MessageRouterSink sinkDefinition \u003d ImmutableMessageRouterSink.builder()\n                .name(\"the topic\")\n                .topicUrl(topicUrl)\n                .build();\n\n        return ImmutableMessageRouterPublishRequest.builder()\n                .sinkDefinition(sinkDefinition)\n                .build();\n` - almost the same code as in the function below, but without setting content type. \nBut I didn\u0027t want to rewrite the code. \nAs \"application/json\" is default value, is it necessary to put it in the function name?",
      "parentUuid": "aea39737_c41d18f4",
      "revId": "68f52ec3fd4641d8c5094cde285922e077fadecb",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12a5c760_13ade1b4",
        "filename": "rest-services/dmaap-client/src/test/java/org/onap/dcaegen2/services/sdk/rest/services/dmaap/client/MessageRouterTestsUtils.java",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 2837
      },
      "writtenOn": "2019-06-24T12:38:22Z",
      "side": 1,
      "message": "ok, leave as it is.",
      "parentUuid": "6775e50b_c84ea7b1",
      "revId": "68f52ec3fd4641d8c5094cde285922e077fadecb",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}